#include <QCoreApplication>
#define R 8// размер таблицы
int main(int argc, char *argv[])
{
    int matritsa[R-1][R-1] = {0};
    matritsa[0][0] = 1;
    int number = 2;
    int a = 1;// номер строки
    int b = 0;// номер столбца
    while (true) {
        while (matritsa[R-1][R-1]!=R*R) {
            if ((b==0) || (a==R-1)) { // если сейчас в первом столбце или последняя строка
                while ((a!=0) && (b!=R-1)) { // пока строка не первая и не последний столбец, то движение вверх по диагонали (сначала присвавивание значения прошлой ячейки)
                    matritsa[a][b] = number;
                    number++;
                    a--;
                    b++;
                }
                if ((a==0) || (b==R-1)) { // если строка первая или столбец последний
                    if ((a==0) && (b!=R-1)) { // если строка первая и столбец не последний,то движение вправо (сначала присваивание значения прошлой ячейки)
                        matritsa[a][b] = number;
                        number++;
                        b++;
                        break;
                    }
                    if ((a==0) && (b==R-1)) { // если строка первая и столбец последний, то движение вниз (сначала присваивание значения прошлой ячейки)
                        matritsa[a][b] = number;
                        number++;
                        a++;
                        break;
                    }
                    if ((a!=0) && (b==R-1)) { // если строка не первая, но столбец последний, то движение вниз (снчала присваивание значения прошлой ячейки)
                        matritsa[a][b] = number;
                        number++;
                        a++;
                        break;
                    }
                }
            }
            if ((a==0) || (b==R-1)){ // если сейчас строка первая или столбец последний
                while ((b!=0) && (a!=R-1)) { // пока столбец не первый и строка не последняя, то движение вниз по диагонали (сначала присваивание значения прошлой ячейки)
                    matritsa[a][b] = number;
                    number++;
                    b--;
                    a++;
                }
                if ((b==0) || (a==R-1)) { // если столбец первый или последняя строка
                    if ((b==0) && (a!=R-1)) { // если столбец первый и не последняя строка, то движение вниз (сначала присваивание значения прошлой ячейки)
                        matritsa[a][b] = number;
                        number++;
                        a++;
                        break;
                    }
                    if ((b==0) && (a==R-1)) { // если столбец первый и последняя строка, то движение вправо (сначала писваивание значения прошлой ячейки)
                        matritsa[a][b] = number;
                        number++;
                        b++;
                        break;
                    }
                    if ((b!=0) && (a==R-1)) { // если столбец не первый, но строка последняя, то движение вправо (сначала присваивание значения прошлой ячейки)
                        matritsa[a][b] = number;
                        number++;
                        b++;
                    }
                }
            }
        }
        if (matritsa[R-1][R-1]==R*R)
            break;
    }
    for (int i=0;i<=R-1;i++) { // распечатка значений матрицы
        for (int j=0;j<=R-1;j++)
            printf("%d ",matritsa[i][j]);
        printf("\n");
    }
}
